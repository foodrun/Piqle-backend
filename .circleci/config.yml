version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.15.3
  aws-ecs: circleci/aws-ecs@2.1.0
  aws-s3: circleci/aws-s3@2.0.0
jobs:
  build_development_api_server:
    working_directory: ~/app
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - aws-s3/copy:
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          aws-region: AWS_REGION_ENV_VAR_NAME
          from: s3://oota-node-backend-config/development/.env
          to: '.'
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          create-repo: false
          dockerfile: Dockerfile
          region: AWS_REGION_ENV_VAR_NAME
          repo: foodrun-node-api
          skip-when-tags-exist: false
          tag: "${CIRCLE_SHA1}"
  build_testing_api_server:
    working_directory: ~/app
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - aws-s3/copy:
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          aws-region: AWS_REGION_ENV_VAR_NAME
          from: s3://oota-node-backend-config/testing/.env
          to: '.'
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          create-repo: false
          dockerfile: Dockerfile
          region: AWS_REGION_ENV_VAR_NAME
          repo: foodrun-node-api-testing
          skip-when-tags-exist: false
          tag: "${CIRCLE_SHA1}"
  build_production_api_server:
    working_directory: ~/app
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - aws-s3/copy:
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          aws-region: AWS_REGION_ENV_VAR_NAME
          from: s3://oota-node-backend-config/production/.env
          to: '.'
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          create-repo: false
          dockerfile: Dockerfile
          region: AWS_REGION_ENV_VAR_NAME
          repo: foodrun-node-api-production
          skip-when-tags-exist: false
          tag: "${CIRCLE_SHA1}"
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_development_api_server:
          filters:
            branches:
              only:
                - develop
      - aws-ecs/deploy-service-update:
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          aws-region: AWS_REGION_ENV_VAR_NAME
          cluster-name: "food-runner-ecs-node"
          container-image-name-updates: "container=food-run-container,tag=${CIRCLE_SHA1}"
          family: "food-run-task-definition"
          service-name: "food-run-ecs-service"
          requires:
            - build_development_api_server
          filters:
            branches:
              only:
                - develop
      - build_testing_api_server:
          filters:
            branches:
              only:
                - testing
      - aws-ecs/deploy-service-update:
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          aws-region: AWS_REGION_ENV_VAR_NAME
          cluster-name: "food-runner-ecs-node"
          container-image-name-updates: "container=foodrun-container-testing,tag=${CIRCLE_SHA1}"
          family: "food-run-task-definition-testing"
          service-name: "foodrun-testing-service"
          requires:
            - build_testing_api_server
          filters:
            branches:
              only:
                - testing
      - build_production_api_server:
          filters:
            branches:
              only:
                - master
      - aws-ecs/deploy-service-update:
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          aws-region: AWS_REGION_ENV_VAR_NAME
          cluster-name: "food-runner-ecs-node"
          container-image-name-updates: "container=foodrun-container-production,tag=${CIRCLE_SHA1}"
          family: "foodrun-task-definition-production"
          service-name: "foodrun-production-service"
          requires:
            - build_production_api_server
          filters:
            branches:
              only:
                - master